//WARNING: This file is AUTOMATICALLY generated. Changes will be OVERWRITTEN!
#include <fstream>

#include <catch2/catch.h>

#include <challenge/advent_of_code/main.h>

namespace tul{
namespace test{
namespace aoc{

TEST_CASE( "aoc/2019_04_1", "[aoc], [aoc/2019]" ){
	auto solver = challenge::aoc::load(2019, 04);
	auto answer = [&solver](std::istream& in){
		return solver->part_1(in).get_answer();
	};

	SECTION( "example case I" ){
		std::ifstream in("test/advent_of_code/2019/04_example_1");
		REQUIRE( answer(in) == "1" );
	}

	SECTION( "example case II" ){
		std::ifstream in("test/advent_of_code/2019/04_example_2");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case III" ){
		std::ifstream in("test/advent_of_code/2019/04_example_3");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case IV" ){
		std::ifstream in("test/advent_of_code/2019/04_example_4");
		REQUIRE( answer(in) == "1" );
	}

	SECTION( "example case V" ){
		std::ifstream in("test/advent_of_code/2019/04_example_5");
		REQUIRE( answer(in) == "1" );
	}

	SECTION( "example case VI" ){
		std::ifstream in("test/advent_of_code/2019/04_example_6");
		REQUIRE( answer(in) == "1" );
	}

	SECTION( "hidden case I" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_1");
		REQUIRE( answer(in) == "925" );
	}

	SECTION( "hidden case II" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_2");
		REQUIRE( answer(in) == "921" );
	}

	SECTION( "hidden case III" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_3");
		REQUIRE( answer(in) == "1154" );
	}

	SECTION( "hidden case IV" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_4");
		REQUIRE( answer(in) == "960" );
	}

	SECTION( "hidden case V" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_5");
		REQUIRE( answer(in) == "1048" );
	}

	SECTION( "hidden case VI" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_6");
		REQUIRE( answer(in) == "579" );
	}

	SECTION( "hidden case VII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_7");
		REQUIRE( answer(in) == "530" );
	}

	SECTION( "hidden case VIII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_8");
		REQUIRE( answer(in) == "1178" );
	}

	SECTION( "hidden case IX" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_9");
		REQUIRE( answer(in) == "460" );
	}

	SECTION( "hidden case X" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_10");
		REQUIRE( answer(in) == "2814" );
	}

	SECTION( "hidden case XI" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_11");
		REQUIRE( answer(in) == "2081" );
	}

	SECTION( "hidden case XII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_12");
		REQUIRE( answer(in) == "1079" );
	}

	SECTION( "hidden case XIII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_13");
		REQUIRE( answer(in) == "1665" );
	}

	SECTION( "hidden case XIV" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_14");
		REQUIRE( answer(in) == "1640" );
	}

	SECTION( "hidden case XV" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_15");
		REQUIRE( answer(in) == "966" );
	}

	SECTION( "hidden case XVI" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_16");
		REQUIRE( answer(in) == "1855" );
	}
}

TEST_CASE( "aoc/2019_04_2", "[aoc], [aoc/2019]" ){
	auto solver = challenge::aoc::load(2019, 04);
	auto answer = [&solver](std::istream& in){
		return solver->part_2(in).get_answer();
	};

	SECTION( "example case I" ){
		std::ifstream in("test/advent_of_code/2019/04_example_1");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case II" ){
		std::ifstream in("test/advent_of_code/2019/04_example_2");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case III" ){
		std::ifstream in("test/advent_of_code/2019/04_example_3");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case IV" ){
		std::ifstream in("test/advent_of_code/2019/04_example_4");
		REQUIRE( answer(in) == "1" );
	}

	SECTION( "example case V" ){
		std::ifstream in("test/advent_of_code/2019/04_example_5");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case VI" ){
		std::ifstream in("test/advent_of_code/2019/04_example_6");
		REQUIRE( answer(in) == "1" );
	}

	SECTION( "hidden case I" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_1");
		REQUIRE( answer(in) == "607" );
	}

	SECTION( "hidden case II" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_2");
		REQUIRE( answer(in) == "603" );
	}

	SECTION( "hidden case III" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_3");
		REQUIRE( answer(in) == "750" );
	}

	SECTION( "hidden case IV" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_4");
		REQUIRE( answer(in) == "626" );
	}

	SECTION( "hidden case V" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_5");
		REQUIRE( answer(in) == "677" );
	}

	SECTION( "hidden case VI" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_6");
		REQUIRE( answer(in) == "358" );
	}

	SECTION( "hidden case VII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_7");
		REQUIRE( answer(in) == "324" );
	}

	SECTION( "hidden case VIII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_8");
		REQUIRE( answer(in) == "763" );
	}

	SECTION( "hidden case IX" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_9");
		REQUIRE( answer(in) == "290" );
	}

	SECTION( "hidden case X" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_10");
		REQUIRE( answer(in) == "1991" );
	}

	SECTION( "hidden case XI" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_11");
		REQUIRE( answer(in) == "1411" );
	}

	SECTION( "hidden case XII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_12");
		REQUIRE( answer(in) == "699" );
	}

	SECTION( "hidden case XIII" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_13");
		REQUIRE( answer(in) == "1131" );
	}

	SECTION( "hidden case XIV" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_14");
		REQUIRE( answer(in) == "1126" );
	}

	SECTION( "hidden case XV" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_15");
		REQUIRE( answer(in) == "628" );
	}

	SECTION( "hidden case XVI" ){
		std::ifstream in("test/advent_of_code/2019/04_hidden_16");
		REQUIRE( answer(in) == "1253" );
	}
}

}
}
}
