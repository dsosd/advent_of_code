//WARNING: This file is AUTOMATICALLY generated. Changes will be OVERWRITTEN!
#include <fstream>

#include <catch2/catch.h>

#include <challenge/advent_of_code/main.h>

namespace tul{
namespace test{
namespace aoc{

TEST_CASE( "aoc/2019_22_1", "[aoc], [aoc/2019]" ){
	auto solver = challenge::aoc::load(2019, 22);
	auto answer = [&solver](std::istream& in){
		return solver->part_1(in).get_answer();
	};

	SECTION( "hidden case I" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_1");
		REQUIRE( answer(in) == "2306" );
	}

	SECTION( "hidden case II" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_2");
		REQUIRE( answer(in) == "7395" );
	}

	SECTION( "hidden case III" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_3");
		REQUIRE( answer(in) == "6978" );
	}

	SECTION( "hidden case IV" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_4");
		REQUIRE( answer(in) == "8379" );
	}

	SECTION( "hidden case V" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_5");
		REQUIRE( answer(in) == "3143" );
	}
}

TEST_CASE( "aoc/2019_22_2", "[aoc], [aoc/2019]" ){
	auto solver = challenge::aoc::load(2019, 22);
	auto answer = [&solver](std::istream& in){
		return solver->part_2(in).get_answer();
	};

	SECTION( "hidden case I" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_1");
		REQUIRE( answer(in) == "12545532223512" );
	}

	SECTION( "hidden case II" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_2");
		REQUIRE( answer(in) == "32376123569821" );
	}

	SECTION( "hidden case III" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_3");
		REQUIRE( answer(in) == "24460989449140" );
	}

	SECTION( "hidden case IV" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_4");
		REQUIRE( answer(in) == "96959315590030" );
	}

	SECTION( "hidden case V" ){
		std::ifstream in("test/advent_of_code/2019/22_hidden_5");
		REQUIRE( answer(in) == "3920265924568" );
	}
}

}
}
}
