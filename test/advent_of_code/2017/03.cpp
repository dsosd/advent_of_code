//WARNING: This file is AUTOMATICALLY generated. Changes will be OVERWRITTEN!
#include <fstream>

#include <catch2/catch.h>

#include <challenge/advent_of_code/main.h>

namespace tul{
namespace test{
namespace aoc{

TEST_CASE( "aoc/2017_03_1", "[aoc], [aoc/2017]" ){
	auto solver = challenge::aoc::load(2017, 03);
	auto answer = [&solver](std::istream& in){
		return solver->part_1(in).get_answer();
	};

	SECTION( "example case I" ){
		std::ifstream in("test/advent_of_code/2017/03_example_1");
		REQUIRE( answer(in) == "0" );
	}

	SECTION( "example case II" ){
		std::ifstream in("test/advent_of_code/2017/03_example_2");
		REQUIRE( answer(in) == "3" );
	}

	SECTION( "example case III" ){
		std::ifstream in("test/advent_of_code/2017/03_example_3");
		REQUIRE( answer(in) == "2" );
	}

	SECTION( "example case IV" ){
		std::ifstream in("test/advent_of_code/2017/03_example_4");
		REQUIRE( answer(in) == "31" );
	}

	SECTION( "hidden case I" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_1");
		REQUIRE( answer(in) == "371" );
	}

	SECTION( "hidden case II" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_2");
		REQUIRE( answer(in) == "430" );
	}

	SECTION( "hidden case III" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_3");
		REQUIRE( answer(in) == "552" );
	}

	SECTION( "hidden case IV" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_4");
		REQUIRE( answer(in) == "326" );
	}

	SECTION( "hidden case V" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_5");
		REQUIRE( answer(in) == "438" );
	}

	SECTION( "hidden case VI" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_6");
		REQUIRE( answer(in) == "419" );
	}
}

TEST_CASE( "aoc/2017_03_2", "[aoc], [aoc/2017]" ){
	auto solver = challenge::aoc::load(2017, 03);
	auto answer = [&solver](std::istream& in){
		return solver->part_2(in).get_answer();
	};

	SECTION( "example case I" ){
		std::ifstream in("test/advent_of_code/2017/03_example_1");
		REQUIRE( answer(in) == "2" );
	}

	SECTION( "example case II" ){
		std::ifstream in("test/advent_of_code/2017/03_example_2");
		REQUIRE( answer(in) == "23" );
	}

	SECTION( "example case III" ){
		std::ifstream in("test/advent_of_code/2017/03_example_3");
		REQUIRE( answer(in) == "25" );
	}

	SECTION( "example case IV" ){
		std::ifstream in("test/advent_of_code/2017/03_example_4");
		REQUIRE( answer(in) == "1968" );
	}

	SECTION( "hidden case I" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_1");
		REQUIRE( answer(in) == "369601" );
	}

	SECTION( "hidden case II" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_2");
		REQUIRE( answer(in) == "312453" );
	}

	SECTION( "hidden case III" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_3");
		REQUIRE( answer(in) == "330785" );
	}

	SECTION( "hidden case IV" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_4");
		REQUIRE( answer(in) == "363010" );
	}

	SECTION( "hidden case V" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_5");
		REQUIRE( answer(in) == "266330" );
	}

	SECTION( "hidden case VI" ){
		std::ifstream in("test/advent_of_code/2017/03_hidden_6");
		REQUIRE( answer(in) == "295229" );
	}
}

}
}
}
